<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="1f023505-a2da-4343-8350-1a7df2943f57" name="Default Changelist" comment="">
      <change afterPath="$PROJECT_DIR$/chain/chain.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/chain/chain_test.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/consistenthash/consistenthash.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/consistenthash/consistenthash_test.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/graph/algraph.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/graph/graph.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/graph/graph_test.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/heap/heap.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/heap/heap_test.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/sorts/heap_sort.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/sorts/heap_sort_test.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/trees/trie/trie.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/trees/trie/trie_test.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/unionfind/unionfind.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/unionfind/unionfind_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.gitignore" beforeDir="false" afterPath="$PROJECT_DIR$/.gitignore" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/algorithm.iml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/algorithm.iml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/modules.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/modules.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/vcs.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/vcs.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/LICENSE" beforeDir="false" afterPath="$PROJECT_DIR$/LICENSE" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/README.md" beforeDir="false" afterPath="$PROJECT_DIR$/README.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/binary/binary.go" beforeDir="false" afterPath="$PROJECT_DIR$/binary/binary.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/binary/binary_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/binary/binary_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/go.mod" beforeDir="false" afterPath="$PROJECT_DIR$/go.mod" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/go.sum" beforeDir="false" afterPath="$PROJECT_DIR$/go.sum" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/leetcode/vote/main.go" beforeDir="false" afterPath="$PROJECT_DIR$/leetcode/vote/main.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/lfu/README.md" beforeDir="false" afterPath="$PROJECT_DIR$/lfu/README.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/lfu/lfu.go" beforeDir="false" afterPath="$PROJECT_DIR$/lfu/lfu.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/lfu/lfu_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/lfu/lfu_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/lru/README.md" beforeDir="false" afterPath="$PROJECT_DIR$/lru/README.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/lru/lru.go" beforeDir="false" afterPath="$PROJECT_DIR$/lru/lru.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/lru/lru_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/lru/lru_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/queue/queue.go" beforeDir="false" afterPath="$PROJECT_DIR$/queue/queue.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/queue/queue_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/queue/queue_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/sorts/sorts.go" beforeDir="false" afterPath="$PROJECT_DIR$/sorts/sorts.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/sorts/sorts_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/sorts/sorts_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/stack/stack.go" beforeDir="false" afterPath="$PROJECT_DIR$/stack/stack.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/stack/stack_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/stack/stack_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/trees/README.md" beforeDir="false" afterPath="$PROJECT_DIR$/trees/README.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/trees/btree/btree.go" beforeDir="false" afterPath="$PROJECT_DIR$/trees/btree/btree.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/trees/btree/btree_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/trees/btree/btree_test.go" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Go Application" />
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="GOROOT" url="file:///usr/local/go" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitSEFilterConfiguration">
    <file-type-list>
      <filtered-out-file-type name="LOCAL_BRANCH" />
      <filtered-out-file-type name="REMOTE_BRANCH" />
      <filtered-out-file-type name="TAG" />
      <filtered-out-file-type name="COMMIT_BY_MESSAGE" />
    </file-type-list>
  </component>
  <component name="GitToolBoxStore">
    <option name="projectConfigVersion" value="2" />
  </component>
  <component name="HighlightingSettingsPerFile">
    <setting file="file:///usr/local/go/src/runtime/panic.go" root0="SKIP_INSPECTION" />
    <setting file="file:///usr/local/go/src/testing/testing.go" root0="SKIP_INSPECTION" />
  </component>
  <component name="ProjectId" id="1qjdJbdLJVNxLILkOZLUpT6OQ12" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">
    <property name="ASKED_ADD_EXTERNAL_FILES" value="true" />
    <property name="ASKED_SHARE_PROJECT_CONFIGURATION_FILES" value="true" />
    <property name="DefaultGoTemplateProperty" value="Go File" />
    <property name="RunOnceActivity.OpenProjectViewOnStart" value="true" />
    <property name="RunOnceActivity.ShowReadmeOnStart" value="true" />
    <property name="SHARE_PROJECT_CONFIGURATION_FILES" value="true" />
    <property name="ToolWindowRun.ShowToolbar" value="false" />
    <property name="WebServerToolWindowFactoryState" value="false" />
    <property name="configurable..is.expanded" value="false" />
    <property name="configurable.GoLibrariesConfigurable.is.expanded" value="true" />
    <property name="go.formatter.settings.were.checked" value="true" />
    <property name="go.import.settings.migrated" value="true" />
    <property name="go.modules.go.list.on.any.changes.was.set" value="true" />
    <property name="go.sdk.automatically.set" value="true" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$" />
    <property name="node.js.detected.package.eslint" value="true" />
    <property name="node.js.detected.package.tslint" value="true" />
    <property name="node.js.selected.package.eslint" value="(autodetect)" />
    <property name="node.js.selected.package.tslint" value="(autodetect)" />
    <property name="nodejs_interpreter_path.stuck_in_default_project" value="undefined stuck path" />
    <property name="nodejs_npm_path_reset_for_default_project" value="true" />
    <property name="settings.editor.selected.configurable" value="com.goide.configuration.GoProjectSettingsConfigurable" />
  </component>
  <component name="RecentsManager">
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/trees/btree" />
    </key>
  </component>
  <component name="RunManager" selected="Go Test.TestUnionSet in github.com/landians/algorithm/unionfind">
    <configuration name="TestHashing in github.com/landians/algorithm/consistenthash" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="algorithm" />
      <working_directory value="$PROJECT_DIR$/consistenthash" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/landians/algorithm/consistenthash" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestHashing\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestKSortChainMerge in github.com/landians/algorithm/chain" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="algorithm" />
      <working_directory value="$PROJECT_DIR$/chain" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/landians/algorithm/chain" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestKSortChainMerge\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestNew in github.com/landians/algorithm/unionfind" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="algorithm" />
      <working_directory value="$PROJECT_DIR$/unionfind" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/landians/algorithm/unionfind" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestNew\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestReverseChain in github.com/landians/algorithm/chain" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="algorithm" />
      <working_directory value="$PROJECT_DIR$/chain" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/landians/algorithm/chain" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestReverseChain\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestUnionSet in github.com/landians/algorithm/unionfind" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="algorithm" />
      <working_directory value="$PROJECT_DIR$/unionfind" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/landians/algorithm/unionfind" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestUnionSet\E$" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Go Test.TestUnionSet in github.com/landians/algorithm/unionfind" />
        <item itemvalue="Go Test.TestNew in github.com/landians/algorithm/unionfind" />
        <item itemvalue="Go Test.TestHashing in github.com/landians/algorithm/consistenthash" />
        <item itemvalue="Go Test.TestKSortChainMerge in github.com/landians/algorithm/chain" />
        <item itemvalue="Go Test.TestReverseChain in github.com/landians/algorithm/chain" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
    <option name="oldMeFiltersMigrated" value="true" />
  </component>
  <component name="VgoProject">
    <integration-enabled>true</integration-enabled>
    <environment>
      <map>
        <entry key="GOPROXY" value="https://goproxy.cn" />
      </map>
    </environment>
    <proxy>https://goproxy.cn</proxy>
  </component>
  <component name="com.intellij.coverage.CoverageDataManagerImpl">
    <SUITE FILE_PATH="coverage/algorithm$Test_HeapSortedArrDistanceLessK_in_github_com_landians_algorithm_sorts.out" NAME="Test_HeapSortedArrDistanceLessK in github.com/landians/algorithm/sorts Coverage Results" MODIFIED="1629620420663" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
  </component>
</project>